{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[pattern,setPattern]=useState('');const[sendValue,setSendValue]=useState('');const[responseMessage,setResponseMessage]=useState('');useEffect(()=>{const fetchPattern=async()=>{try{const response=await axios.get('/api/memorycolourmaster/getpattern');// Update the state with the response message\nsetPattern(response.data.message);}catch(error){// Handle error case\nconsole.error(\"Error fetching the greeting: \",error);}};fetchPattern();},[]);// The empty array ensures the effect runs only once (when the component mounts)\nconst handleSquareClick=colour=>{console.log(`${colour} square clicked!`);};const getPattern=async()=>{try{const response=await axios.get('/api/memorycolourmaster/getpattern');// Update the state with the response message\nsetPattern(response.data.message);}catch(error){// Handle error case\nconsole.error(\"Error fetching the greeting: \",error);}};//POST\n// Send message to ASP.NET \nconst sendPattern=async()=>{try{const response=await axios.post('/api/message/send',{text:sendValue});setResponseMessage(response.data.message);//setInputValue(''); // Clear input field after sending\nsetSendValue('');}catch(error){console.error(\"Error sending the message: \",error);}};const clearPattern=async()=>{try{const response=await axios.post('/api/memorycolourmaster/getpattern',{text:sendValue});setResponseMessage(response.data.message);//setInputValue(''); // Clear input field after sending\nsetSendValue('');}catch(error){console.error(\"Error sending the message: \",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",style:styles.container,children:[/*#__PURE__*/_jsx(\"div\",{style:{...styles.square,backgroundColor:'red'},onClick:()=>handleSquareClick('Red')}),/*#__PURE__*/_jsx(\"div\",{style:{...styles.square,backgroundColor:'blue'},onClick:()=>handleSquareClick('Blue')}),/*#__PURE__*/_jsx(\"div\",{style:{...styles.square,backgroundColor:'green'},onClick:()=>handleSquareClick('Green')}),/*#__PURE__*/_jsx(\"div\",{style:{...styles.square,backgroundColor:'yellow'},onClick:()=>handleSquareClick('Yellow')}),/*#__PURE__*/_jsxs(\"div\",{id:\"player_ui\",className:\"ui\",children:[/*#__PURE__*/_jsx(\"h1\",{children:pattern}),/*#__PURE__*/_jsx(\"button\",{onClick:getPattern,children:\"Generate new pattern \"}),/*#__PURE__*/_jsx(\"button\",{onClick:clearPattern,children:\"Clear pattern \"})]})]});}//Inline styles\nconst styles={container:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh',gap:'20px'},square:{width:'150px',height:'150px',cursor:'pointer'}};export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","App","pattern","setPattern","sendValue","setSendValue","responseMessage","setResponseMessage","fetchPattern","response","get","data","message","error","console","handleSquareClick","colour","log","getPattern","sendPattern","post","text","clearPattern","className","style","styles","container","children","square","backgroundColor","onClick","id","display","justifyContent","alignItems","height","gap","width","cursor"],"sources":["/home/fnky/C0de/C#/NET/React/ReactAspNetApp/memory_colour_master/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [pattern, setPattern] = useState('');\n  const [sendValue, setSendValue] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n  \n  useEffect(() => {\n    \n    const fetchPattern = async () => {\n      try {\n        const response = await axios.get('/api/memorycolourmaster/getpattern');\n        // Update the state with the response message\n        setPattern(response.data.message);\n      } catch (error) {\n        // Handle error case\n        console.error(\"Error fetching the greeting: \", error);\n      }      \n    };\n    \n   fetchPattern(); \n\n}, []); // The empty array ensures the effect runs only once (when the component mounts)\n\n\n\n \n  const handleSquareClick = (colour) => {\n    console.log(`${colour} square clicked!`);\n  };\n\n  const getPattern = async () => {\n      try {\n        const response = await axios.get('/api/memorycolourmaster/getpattern');\n        // Update the state with the response message\n        setPattern(response.data.message);\n      } catch (error) {\n        // Handle error case\n        console.error(\"Error fetching the greeting: \", error);\n      }      \n   };\n\n  //POST\n  // Send message to ASP.NET \n  const sendPattern = async () => {\n    try {\n      const response = await axios.post('/api/message/send', { text: sendValue});\n      setResponseMessage(response.data.message);\n      //setInputValue(''); // Clear input field after sending\n      setSendValue('');\n    } catch (error) {\n      console.error(\"Error sending the message: \", error);\n    }\n  };\n\n  const clearPattern = async () => {\n    try {\n      const response = await axios.post('/api/memorycolourmaster/getpattern', { text: sendValue});\n      setResponseMessage(response.data.message);\n      //setInputValue(''); // Clear input field after sending\n      setSendValue('');\n    } catch (error) {\n      console.error(\"Error sending the message: \", error);\n    }\n  };\n\n\n\n\n  return (\n    <div className=\"App\" style={styles.container}>\n      <div\n        style={{ ...styles.square, backgroundColor: 'red'}}\n        onClick={() => handleSquareClick('Red')}\n       ></div>\n      <div\n        style={{ ...styles.square, backgroundColor: 'blue'}}\n        onClick={() => handleSquareClick('Blue')}\n      ></div>\n      <div\n        style={{ ...styles.square, backgroundColor: 'green'}}\n        onClick={() => handleSquareClick('Green')}\n      ></div>\n      <div\n        style={{ ...styles.square, backgroundColor: 'yellow'}}\n        onClick={() => handleSquareClick('Yellow')}\n      ></div>\n    \n    <div id=\"player_ui\" className='ui'>\n      <h1>{pattern}</h1>\n      <button onClick={getPattern}>Generate new pattern </button>\n      <button onClick={clearPattern}>Clear pattern </button>\n    </div>\n    </div>\n  );\n}\n\n//Inline styles\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    gap: '20px',\n  },\n  square: {\n    width: '150px',\n    height: '150px',\n    cursor: 'pointer',\n  },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}